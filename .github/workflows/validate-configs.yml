name: Validate Chart Configurations

on:
  workflow_dispatch:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  validate-configs:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        config:
          - name: "default-config"
            values: |
              postgresql:
                enabled: true
          - name: "external-postgresql"
            values: |
              postgresql:
                enabled: false
              externalPostgresql:
                host: "external-postgres"
                port: 5432
                user: "wakapi"
                database: "wakapi"
          - name: "with-sentry"
            values: |
              postgresql:
                enabled: true
              wakapi:
                config:
                  sentry_dsn: "https://test@sentry.io/123456"
          - name: "with-trusted-headers"
            values: |
              postgresql:
                enabled: true
              wakapi:
                config:
                  trusted_header_auth: true
                  trusted_header_auth_key: "X-Forwarded-User"
          - name: "custom-persistence"
            values: |
              postgresql:
                enabled: true
                primary:
                  persistence:
                    enabled: true
                    storageClass: "longhorn-simple"
                    size: "20Gi"
          - name: "resource-limits"
            values: |
              postgresql:
                enabled: true
              wakapi:
                resources:
                  limits:
                    cpu: 500m
                    memory: 512Mi
                  requests:
                    cpu: 100m
                    memory: 128Mi

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.12.1

      - name: Add dependency chart repos
        run: |
          helm repo add bitnami https://charts.bitnami.com/bitnami

      - name: Update chart dependencies
        run: |
          helm dependency update charts/wakapi

      - name: Create test values file
        run: |
          cat > test-values-${{ matrix.config.name }}.yaml << 'EOF2'
          ${{ matrix.config.values }}
          EOF2

      - name: Lint chart with ${{ matrix.config.name }} config
        run: |
          helm lint charts/wakapi -f test-values-${{ matrix.config.name }}.yaml
          echo "✅ Lint passed for ${{ matrix.config.name }}"

      - name: Test template generation for ${{ matrix.config.name }}
        run: |
          helm template test-${{ matrix.config.name }} charts/wakapi -f test-values-${{ matrix.config.name }}.yaml > output-${{ matrix.config.name }}.yaml
          echo "✅ Template generation passed for ${{ matrix.config.name }}"

      - name: Validate generated manifests
        run: |
          # Check that required resources are generated
          grep -q "kind: Deployment" output-${{ matrix.config.name }}.yaml || (echo "❌ Deployment not found" && exit 1)
          grep -q "kind: Service" output-${{ matrix.config.name }}.yaml || (echo "❌ Service not found" && exit 1)
          grep -q "kind: ConfigMap" output-${{ matrix.config.name }}.yaml || (echo "❌ ConfigMap not found" && exit 1)

          # Check PostgreSQL configuration
          if [[ "${{ matrix.config.name }}" == *"external-postgresql"* ]]; then
            ! grep -q "kind: StatefulSet" output-${{ matrix.config.name }}.yaml || (echo "❌ PostgreSQL StatefulSet found when external DB configured" && exit 1)
          else
            grep -q "kind: StatefulSet" output-${{ matrix.config.name }}.yaml || (echo "❌ PostgreSQL StatefulSet not found when internal DB enabled" && exit 1)
          fi

          # Check resource limits if configured
          if [[ "${{ matrix.config.name }}" == *"resource-limits"* ]]; then
            grep -q "resources:" output-${{ matrix.config.name }}.yaml || (echo "❌ Resources not found when configured" && exit 1)
          fi

          echo "✅ Manifest validation passed for ${{ matrix.config.name }}"

      - name: Upload generated manifests
        uses: actions/upload-artifact@v4
        with:
          name: manifests-${{ matrix.config.name }}
          path: output-${{ matrix.config.name }}.yaml
